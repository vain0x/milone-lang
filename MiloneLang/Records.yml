KnownCtx:
  Known: AssocSet<FunSerial>
  Locals: AssocSet<VarSerial>
  Refs: AssocSet<VarSerial>

EtaCtx:
  Serial: Serial
  Vars: AssocMap<VarSerial, VarDef>
  Tys: AssocMap<TySerial, TyDef>

MonoCtx:
  Serial: Serial
  Logs: (Log * Loc) list

  Vars: AssocMap<VarSerial, VarDef>
  Tys: AssocMap<TySerial, TyDef>
  TyDepths: AssocMap<TySerial, LetDepth>

  # Map from
  # - generic function serial
  #
  # to:
  # - found use-site types
  GenericFunUseSiteTys: AssocMap<FunSerial, Ty list>

  # Map from pairs:
  # - generic function's serial
  # - monomorphic type
  #
  # to:
  # - monomorphized function's serial
  GenericFunMonoSerials: AssocMap<FunSerial * Ty, FunSerial>

  Mode: MonoMode
  SomethingHappened: bool
  InfiniteLoopDetector: int

KirGenCtx:
  Serial: Serial
  Vars: AssocMap<VarSerial, VarDef>
  Tys: AssocMap<TySerial, TyDef>
  Logs: (Log * Loc) list
  MainFunSerial: FunSerial option
  Joints: KJointBinding list
  Funs: KFunBinding list

KirPropagateCtx:
  VarDefs: AssocMap<VarSerial, KVarDef>
  VarUses: AssocMap<VarSerial, int>

KirToMirCtx:
  Serial: Serial
  Vars: AssocMap<VarSerial, VarDef>
  Tys: AssocMap<TySerial, TyDef>
  MainFunSerial: FunSerial option
  LabelSerial: Serial
  JointMap: AssocMap<JointSerial, Label * VarSerial list>
  Labels: MStmt list list
  LabelCount: int
  Stmts: MStmt list
  Logs: (Log * Loc) list

MirCtx:
  Serial: Serial
  Vars: AssocMap<VarSerial, VarDef>
  Tys: AssocMap<TySerial, TyDef>
  LabelSerial: Serial

  # (label, parameters), where the label is the entrypoint of current fun.
  # For tail-rec (tail-call) optimization.
  CurrentFun: (Label * VarSerial list) option

  Stmts: MStmt list
  Logs: (Log * Loc) list

CirCtx:
  Vars: AssocMap<VarSerial, VarDef>
  VarUniqueNames: AssocMap<VarSerial, Ident>
  TyEnv: AssocMap<Ty, CTyInstance * CTy>
  Tys: AssocMap<TySerial, TyDef>
  TyUniqueNames: AssocMap<Ty, Ident>
  Stmts: CStmt list
  Decls: CDecl list
  Logs: (Log * Loc) list

# Abstraction layer of CLI program.
CliHost:
  # Command line args.
  Args: string list

  # Path to milone home (installation directory).
  MiloneHome: string

  # Creates a profiler.
  ProfileInit: (unit -> Profiler)

  # Prints a message to stderr for profiling.
  ProfileLog: (string -> Profiler -> unit)

  # Reads all contents of a file as string.
  FileReadAllText: (string -> string option)
