module rec Std.Region

/// Allocates a block of memory in the current region.
/// (Similar to `calloc`.)
///
/// Contents are zeroed.
let rawRegionAlloc (count: uint) (size: uint): voidptr =
  if (count ||| size) <> 0u then
    __nativeExpr("milone_region_alloc({0}, {1})", count, size)
  else
    // Not using Ptr.nullPtr here to avoid dependency.
    __nativeExpr "NULL"

module Region =
  /// Runs a function in new region.
  let run (action: unit -> int) : int =
    __nativeStmt "milone_region_enter();"
    let code = action ()
    __nativeStmt "milone_region_leave();"
    code

  /// Allocates a block of memory in current region.
  let alloc (count: uint) : __outptr<'T> =
    __nativeCast (rawRegionAlloc count (uint sizeof<'T>))
