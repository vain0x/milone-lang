// Provides the IO mechanism.

// IO = input/output.
// Here IO indicates a kind of operations that affect the host environment (OS)
// such as file system, network, processes etc.

open Std.Own
open Std.StdError

/// Owned marker to make it explicit for a function to use IO operations.
///
/// As a convention, functions that use IO should take an IO value and return it.
/// By passing an IO value around, dependencies are explicitly expressed
/// between use of IO-dependent functions.
type IO = private IO of Own<unit>

module IO =
  /// Executes a program that uses IO operations inside of it.
  ///
  /// Usage:
  ///
  /// ```fs
  ///   open Std.StdError
  ///
  ///   let main _ = never (IO.exec (fun io -> action io))
  /// ```
  let exec (action: IO -> IO) : Never =
    let (IO io) = action (IO(Own.acquire ()))
    Own.release io
    __nativeStmt ("exit(0);")
    unreachable ()
