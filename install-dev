#!/bin/sh
# WARN: This script unlikely works other than author's env.

# Install milone command locally for development.

set -eu

# Somewhere in PATH.
BIN_DIR="$HOME/bin"

# Installation directory.
MILONE_HOME="$HOME/.milone"

# ------------------------------------------------
# Process
# ------------------------------------------------

# Ensure directory exists.
mkdir -p "$MILONE_HOME"

# Install native executable.
cp -bf ./milone "$MILONE_HOME/milone_native"

# Install .NET Core executable. (.NET Core runtime is required to run.)
dotnet publish MiloneLang \
    --runtime linux-x64 \
    -o "$MILONE_HOME/milone_netcore" \
    -nologo

# Link runtime.
test -d "$MILONE_HOME/runtime" && rm "$MILONE_HOME/runtime"
ln -sf "$PWD/runtime" "$MILONE_HOME/runtime"

# Link MiloneCore.
test -d "$MILONE_HOME/libcore" && rm "$MILONE_HOME/libcore"
ln -sf "$PWD/libcore" "$MILONE_HOME/libcore"

# ------------------------------------------------
# milone script
# ------------------------------------------------

cat >"$BIN_DIR/milone" <<'END'
#!/bin/sh

# Try run native version.
MILONE_HOME="{{ MILONE_HOME }}" "{{ MILONE_HOME }}/milone_native" "$@"
CODE1=$?
test $CODE1 -eq 0 && exit 0

echo -e '\nmilone: Retrying with .NET Core version...\n' >&2

MILONE_HOME="{{ MILONE_HOME }}" "{{ MILONE_HOME }}/milone_netcore/MiloneLang" "$@"
CODE2=$?
test $CODE2 -eq 0 && exit 0

echo "milone: Exited with $CODE1 (native) and $CODE2 (netcore)"
exit 1
END

sed -i "s:{{ MILONE_HOME }}:$MILONE_HOME:g" "$BIN_DIR/milone"

chmod +x "$BIN_DIR/milone"

# ------------------------------------------------
# milone-gcc script
# ------------------------------------------------

cat >"$BIN_DIR/milone-gcc" <<'END'
#!/bin/sh

milone "$@" | gcc -std=c11 -O2 -I "{{ MILONE_HOME }}/runtime" "{{ MILONE_HOME }}/runtime/milone.c" -x c -
END

sed -i "s:{{ MILONE_HOME }}:$MILONE_HOME:g" "$BIN_DIR/milone-gcc"

chmod +x "$BIN_DIR/milone-gcc"

echo 'OK'
