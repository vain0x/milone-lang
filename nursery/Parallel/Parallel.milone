module rec Parallel.Program

open LibNursery.EphArray
open LibNursery.EphSerial

let fib (n: int) =
  if n <= 1 then
    1
  else
    fib (n - 1) + fib (n - 2)

let main _ =
  let f: int -> int = fun n -> fib n
  let s = 0
  let t = 44
  let len = t - s

  let ptr: nativeptr<int> =
    __nativeFun ("milone_parallel_for_int", s, t, f)

  EphSerial.run (fun serial ->
    let array, serial =
      EphArray.Unsafe.ofRawParts ptr len serial

    array
    |> EphArray.toList
    |> fst
    |> List.fold (fun () i -> printfn "%d" i) ()

    0, serial)
