module rec CmdCat.Ffi

open Std.Own
open Std.Ptr
open Std.Vector

// -----------------------------------------------
// Profiler
// -----------------------------------------------

/// Memory profiler.
type Profiler = private Profiler of Own<voidptr>

module Profiler =
  let create () : Profiler =
    let state: voidptr = __nativeFun "milone_profile_init"
    Profiler(Own.acquire state)

  let dispose (Profiler state) : unit = Own.release state |> ignore

  let log (msg: string) (Profiler state) : Profiler =
    let state = Own.release state
    __nativeFun ("milone_profile_log", msg, state)
    Profiler(Own.acquire state)
