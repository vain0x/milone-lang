HIR:
let-fun:
- failwith
- inf:
  - inf:
    - inf:
      - printfn
      - \"FATAL ERROR: %s\"
    - str
  - inf:
    - exit
    - 1
let-fun:
- failwithf
- inf:
  - inf:
    - inf:
      - printfn
      - \"FATAL ERROR: %s\"
    - str
  - inf:
    - exit
    - 1
let-fun:
- fst
- x
inf:
- inf
- inf:
  - synonym
  - synonym
  - union: Lit
  - union: DumpTree
  - synonym
  - synonym
  - synonym
  - union: Token
  - union: UniOp
  - union: OpLevel
  - union: Op
  - union: ATy
  - union: APat
  - union: AArm
  - union: AVariant
  - union: ALet
  - union: ATyDecl
  - union: AExpr
  - synonym
  - synonym
  - synonym
  - synonym
  - synonym
  - synonym
  - union: NameCtx
  - union: TyCon
  - union: Ty
  - union: TyScheme
  - union: TySpec
  - union: Trait
  - union: TyDecl
  - union: TyDef
  - union: VarDef
  - union: HPat
  - union: HPrim
  - union: InfOp
  - inf:
    - union: HExpr
    - inf:
      - open:
        - MiloneLang
        - Types
      - let-fun:
        - cons
        - inf:
          - inf:
            - prim
            - head
          - tail
        let-fun:
        - listIsEmpty
        - match: xs
        let-fun:
        - listLength
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - 0
          - xs
        let-fun:
        - listRev
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - prim
          - xs
        let-fun:
        - listIter
        - match: xs
        let-fun:
        - listMap
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - prim
          - xs
        let-fun:
        - listMapWithIndex
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - inf:
              - go
              - prim
            - 0
          - xs
        let-fun:
        - listFilter
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - prim
          - xs
        let-fun:
        - listChoose
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - prim
          - xs
        let-fun:
        - listCollect
        - let-fun:
          - gogo
          - match: ys
          let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - prim
          - xs
        let-fun:
        - listForAll
        - let-fun:
          - go
          - match: xs
          inf:
          - go
          - xs
        let-fun:
        - listExists
        - let-fun:
          - go
          - match: xs
          inf:
          - go
          - xs
        let-fun:
        - listFold
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - state
          - xs
        let-fun:
        - listReduce
        - match: xs
        let-fun:
        - listLast
        - let-fun:
          - go
          - match: xs
          inf:
          - go
          - xs
        let-fun:
        - listSkip
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - count
          - xs
        let-fun:
        - listTruncate
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - inf:
              - go
              - prim
            - count
          - xs
        let-fun:
        - listAppend
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - ys
          - inf:
            - listRev
            - xs
        let-fun:
        - listSortCore
        - let-fun:
          - merge
          - match:
            - inf:
              - inf:
                - prim
                - xn
              - 0
          let-fun:
          - go
          - match:
            - inf:
              - inf:
                - prim
                - inf:
                  - inf:
                    - prim
                    - 1
                  - n
              - false
          let-val:
          - inf:
            - listLength
            - xs
          let-val:
          - inf:
            - go
            - inf:
              - xs
              - xn
          inf:
          - inf:
            - assert
            - inf:
              - inf:
                - prim
                - inf:
                  - inf:
                    - prim
                    - zn
                  - d
              - xn
          - inf:
            - assert
            - inf:
              - listIsEmpty
              - ws
          - inf:
            - inf:
              - listTruncate
              - zn
            - zs
        let-fun:
        - listSort
        - inf:
          - inf:
            - inf:
              - listSortCore
              - false
            - cmp
          - xs
        let-fun:
        - listUnique
        - inf:
          - inf:
            - inf:
              - listSortCore
              - true
            - cmp
          - xs
        let-fun:
        - stMap
        - let-fun:
          - go
          - match: xs
          inf:
          - inf:
            - go
            - prim
          - inf:
            - xs
            - ctx
        let-fun:
        - mapEmpty
        - inf:
          - inf:
            - prim
            - cmp
        let-fun:
        - mapAdd
        - inf:
          - inf:
            - inf:
              - inf:
                - prim
                - inf:
                  - key
                  - value
              - assoc
            - cmp
        let-fun:
        - mapRemove
        - inf:
          - inf:
            - inf:
              - inf:
                - listFilter
                - let-fun:
                  - fun
                  - inf:
                    - inf:
                      - prim
                      - inf:
                        - inf:
                          - prim
                          - inf:
                            - inf:
                              - cmp
                              - k
                            - key
                        - 0
                    - false
                  fun
              - assoc
            - cmp
        let-fun:
        - mapTryFind
        - let-fun:
          - go
          - match: assoc
          inf:
          - go
          - assoc
        let-fun:
        - mapFind
        - match:
          - inf:
            - inf:
              - mapTryFind
              - key
            - map
        let-fun:
        - mapContainsKey
        - match:
          - inf:
            - inf:
              - mapTryFind
              - key
            - map
        let-fun:
        - mapFold
        - let-fun:
          - go
          - match: assoc
          let-val: map
          inf:
          - inf:
            - go
            - state
          - inf:
            - mapToList
            - map
        let-fun:
        - mapMap
        - inf:
          - let-val: map
            inf:
            - inf:
              - inf:
                - listMap
                - let-fun:
                  - fun
                  - inf:
                    - k
                    - inf:
                      - inf:
                        - f
                        - k
                      - v
                  fun
              - inf:
                - mapToList
                - map
            - cmp
        let-fun:
        - mapToList
        - inf:
          - inf:
            - listUnique
            - let-fun:
              - fun
              - inf:
                - inf:
                  - cmp
                  - lk
                - rk
              fun
          - assoc
        let-fun:
        - mapOfList
        - inf:
          - inf:
            - inf:
              - listRev
              - assoc
            - cmp
        let-fun:
        - intMin
        - match:
          - inf:
            - inf:
              - prim
              - y
            - x
        let-fun:
        - intMax
        - match:
          - inf:
            - inf:
              - prim
              - x
            - y
        let-fun:
        - intEq
        - inf:
          - inf:
            - prim
            - x
          - y
        let-fun:
        - intCmp
        - match:
          - inf:
            - inf:
              - prim
              - y
            - x
        let-fun:
        - intToHexWithPadding
        - match:
          - inf:
            - inf:
              - prim
              - value
            - 0
        let-fun:
        - intFromHex
        - inf:
          - inf:
            - assert
            - match:
              - match:
                - inf:
                  - inf:
                    - prim
                    - inf:
                      - inf:
                        - prim
                        - l
                      - 0
                  - false
          - let-fun:
            - hexDigitToInt
            - match:
              - match:
                - inf:
                  - inf:
                    - prim
                    - inf:
                      - inf:
                        - prim
                        - c
                      - \'0\'
                  - false
            let-fun:
            - go
            - match:
              - inf:
                - inf:
                  - prim
                  - i
                - r
            inf:
            - inf:
              - go
              - 0
            - l
        let-fun:
        - charSub
        - inf:
          - inf:
            - prim
            - inf:
              - int
              - x
          - inf:
            - int
            - y
        let-fun:
        - charIsControl
        - let-val:
          - inf:
            - int
            - c
          match:
          - match:
            - inf:
              - inf:
                - prim
                - inf:
                  - inf:
                    - prim
                    - n
                  - 0
              - false
        let-fun:
        - charIsSpace
        - inf:
          - match:
            - match:
              - match:
                - inf:
                  - inf:
                    - prim
                    - c
                  - \' \'
        let-fun:
        - charIsDigit
        - inf:
          - match:
            - inf:
              - inf:
                - prim
                - inf:
                  - inf:
                    - prim
                    - c
                  - \'0\'
              - false
        let-fun:
        - charIsAlpha
        - inf:
          - match:
            - match:
              - inf:
                - inf:
                  - prim
                  - inf:
                    - inf:
                      - prim
                      - c
                    - \'A\'
                - false
        let-fun:
        - charNeedsEscaping
        - match:
          - match:
            - match:
              - inf:
                - charIsControl
                - c
        let-fun:
        - charEscape
        - inf:
          - inf:
            - assert
            - inf:
              - charNeedsEscaping
              - c
          - match: c
        let-fun:
        - strCmp
        - match:
          - inf:
            - inf:
              - prim
              - y
            - x
        let-fun:
        - strSlice
        - inf:
          - inf:
            - inf:
              - assert
              - match:
                - inf:
                  - inf:
                    - prim
                    - inf:
                      - inf:
                        - prim
                        - endIndex
                      - start
                  - false
            - match:
              - inf:
                - inf:
                  - prim
                  - inf:
                    - inf:
                      - prim
                      - start
                    - endIndex
                - false
        let-fun:
        - strConcat
        - let-fun:
          - go
          - match: xs
          let-val:
          - inf:
            - listLength
            - xs
          let-val:
          - inf:
            - inf:
              - go
              - xs
            - n
          inf:
          - inf:
            - assert
            - inf:
              - listIsEmpty
              - xs
          - s
        let-fun:
        - strNeedsEscaping
        - let-fun:
          - go
          - match:
            - inf:
              - inf:
                - prim
                - i
              - .Length: str
          inf:
          - go
          - 0
        let-fun:
        - strEscape
        - let-fun:
          - go
          - let-fun:
            - raw
            - match:
              - match:
                - inf:
                  - inf:
                    - prim
                    - i
                  - .Length: str
            let-val:
            - let-val:
              - inf:
                - raw
                - i
              inf:
              - r
              - inf:
                - inf:
                  - prim
                  - inf:
                    - inf:
                      - inf:
                        - strSlice
                        - i
                      - r
                    - str
                - acc
            match:
            - inf:
              - inf:
                - prim
                - i
              - .Length: str
          match:
          - inf:
            - not
            - inf:
              - strNeedsEscaping
              - str
        let-val:
        - inf:
          - inf:
            - inf:
              - prim
              - 0
            - 1
          - inf:
            - inf:
              - prim
              - 0
            - 1
        let-fun:
        - locX
        - x
        let-fun:
        - locY
        - y
        let-fun:
        - locIsSameRow
        - inf:
          - inf:
            - prim
            - inf:
              - locY
              - first
          - inf:
            - locY
            - second
        let-fun:
        - locIsSameColumn
        - inf:
          - inf:
            - prim
            - inf:
              - locX
              - first
          - inf:
            - locX
            - second
        let-fun:
        - locInside
        - inf:
          - inf:
            - prim
            - inf:
              - inf:
                - prim
                - inf:
                  - locX
                  - secondLoc
              - inf:
                - locX
                - firstLoc
          - false
        let-fun:
        - locAddX
        - inf:
          - y
          - inf:
            - inf:
              - prim
              - x
            - dx
        let-fun:
        - locMax
        - inf:
          - inf:
            - inf:
              - intMax
              - firstY
            - secondY
          - inf:
            - inf:
              - intMax
              - firstX
            - secondX
        let-fun:
        - locToString
        - inf:
          - inf:
            - prim
            - inf:
              - inf:
                - prim
                - inf:
                  - string
                  - inf:
                    - inf:
                      - prim
                      - y
                    - 1
              - \":\"
          - inf:
            - string
            - inf:
              - inf:
                - prim
                - x
              - 1
        let-fun:
        - tokenIsExprOrPatFirst
        - match: token
        let-fun:
        - tokenIsExprFirst
        - match: token
        let-fun:
        - tokenIsArgFirst
        - match: token
        let-fun:
        - tokenIsPatFirst
        - inf:
          - tokenIsExprOrPatFirst
          - token
        let-fun:
        - tokenIsAccessModifier
        - match: token
        let-fun:
        - opLevelToNext
        - match: level
        let-fun:
        - apFalse
        - inf:
          - .Lit: APat
          - inf:
            - litFalse
            - loc
        let-fun:
        - apTrue
        - inf:
          - .Lit: APat
          - inf:
            - litTrue
            - loc
        let-fun:
        - axUnit
        - inf:
          - .TupleLit: AExpr
          - inf:
            - prim
            - loc
        let-fun:
        - axFalse
        - inf:
          - .Lit: AExpr
          - inf:
            - litFalse
            - loc
        let-fun:
        - axTrue
        - inf:
          - .Lit: AExpr
          - inf:
            - litTrue
            - loc
        let-fun:
        - axNil
        - inf:
          - .ListLit: AExpr
          - inf:
            - prim
            - loc
        let-fun:
        - axApp3
        - let-fun:
          - app
          - inf:
            - .Bin: AExpr
            - inf:
              - .App: Op
              - f
              - x
              - loc
          inf:
          - inf:
            - app
            - x3
          - inf:
            - inf:
              - app
              - x2
            - inf:
              - inf:
                - app
                - x1
              - f
        let-fun:
        - axNot
        - let-val:
          - inf:
            - axFalse
            - loc
          inf:
          - .Bin: AExpr
          - inf:
            - .Eq: Op
            - arg
            - falseExpr
            - loc
        let-fun:
        - dumpTreeNew
        - inf:
          - DumpTree
          - inf:
            - text
            - children
            - prim
        let-fun:
        - dumpTreeNewLeaf
        - inf:
          - DumpTree
          - inf:
            - text
            - prim
            - prim
        let-fun:
        - dumpTreeAttachNext
        - match: tree
        let-fun:
        - dumpTreeFromError
        - let-val:
          - inf:
            - string
            - inf:
              - inf:
                - prim
                - y
              - 1
          let-val:
          - inf:
            - string
            - inf:
              - inf:
                - prim
                - x
              - 1
          inf:
          - inf:
            - dumpTreeNew
            - \"ERROR\"
          - inf:
            - inf:
              - prim
              - inf:
                - dumpTreeNewLeaf
                - msg
            - inf:
              - inf:
                - prim
                - inf:
                  - dumpTreeNewLeaf
                  - inf:
                    - inf:
                      - prim
                      - inf:
                        - inf:
                          - prim
                          - inf:
                            - inf:
                              - prim
                              - inf:
                                - inf:
                                  - prim
                                  - \"(\"
                                - y
                            - \":\"
                        - x
                    - \")\"
              - prim
        let-fun:
        - dumpTreeToString
        - let-fun:
          - go
          - let-fun:
            - goChildren
            - match: children
            let-fun:
            - goNext
            - match: next
            match: node
          let-val: \"\\n\"
          inf:
          - strConcat
          - inf:
            - listRev
            - inf:
              - inf:
                - inf:
                  - go
                  - eol
                - node
              - prim
        let-fun:
        - nameCtxEmpty
        - inf:
          - NameCtx
          - inf:
            - inf:
              - mapEmpty
              - intCmp
            - 0
        let-fun:
        - nameCtxAdd
        - let-val:
          - inf:
            - inf:
              - prim
              - serial
            - 1
          let-val:
          - inf:
            - inf:
              - inf:
                - mapAdd
                - serial
              - ident
            - map
          inf:
          - serial
          - inf:
            - NameCtx
            - inf:
              - map
              - serial
        let-fun:
        - nameCtxFind
        - inf:
          - inf:
            - mapFind
            - serial
          - map
        let-fun:
        - traitMapTys
        - match: it
        let-val:
        - inf:
          - .Error: Ty
          - noLoc
        let-val:
        - inf:
          - .Con: Ty
          - inf:
            - .Bool: TyCon
            - prim
        let-val:
        - inf:
          - .Con: Ty
          - inf:
            - .Int: TyCon
            - prim
        let-val:
        - inf:
          - .Con: Ty
          - inf:
            - .Char: TyCon
            - prim
        let-val:
        - inf:
          - .Con: Ty
          - inf:
            - .Str: TyCon
            - prim
        let-val:
        - inf:
          - .Con: Ty
          - inf:
            - .Obj: TyCon
            - prim
        let-fun:
        - tyTuple
        - inf:
          - .Con: Ty
          - inf:
            - .Tuple: TyCon
            - tys
        let-fun:
        - tyList
        - inf:
          - .Con: Ty
          - inf:
            - .List: TyCon
            - inf:
              - inf:
                - prim
                - ty
              - prim
        let-fun:
        - tyFun
        - inf:
          - .Con: Ty
          - inf:
            - .Fun: TyCon
            - inf:
              - inf:
                - prim
                - sourceTy
              - inf:
                - inf:
                  - prim
                  - targetTy
                - prim
        let-val:
        - inf:
          - tyTuple
          - prim
        let-fun:
        - tyRef
        - inf:
          - .Con: Ty
          - inf:
            - inf:
              - .Ref: TyCon
              - serial
            - tys
        let-fun:
        - tyPrimFromIdent
        - match:
          - inf:
            - ident
            - tys
        let-fun:
        - tyIsFreeIn
        - inf:
          - let-fun:
            - go
            - match: ty
            inf:
            - go
            - ty
        let-fun:
        - tyIsMonomorphic
        - inf:
          - let-fun:
            - go
            - match: tys
            inf:
            - go
            - inf:
              - inf:
                - prim
                - ty
              - prim
        let-fun:
        - tyDefToIdent
        - match: tyDef
        let-fun:
        - varDefToIdent
        - match: varDef
        let-val:
        - inf:
          - .Bool: Lit
          - true
        let-val:
        - inf:
          - .Bool: Lit
          - false
        let-fun:
        - litToTy
        - inf:
          - match: lit
        let-fun:
        - primToTySpec
        - let-fun:
          - meta
          - inf:
            - .Meta: Ty
            - inf:
              - id
              - noLoc
          let-fun:
          - mono
          - inf:
            - TySpec
            - inf:
              - ty
              - prim
          let-fun:
          - poly
          - inf:
            - TySpec
            - inf:
              - ty
              - traits
          match: prim
        let-fun:
        - patUnit
        - inf:
          - .Tuple: HPat
          - inf:
            - prim
            - tyUnit
            - loc
        let-fun:
        - patNil
        - inf:
          - .Nil: HPat
          - inf:
            - itemTy
            - loc
        let-fun:
        - patExtract
        - inf:
          - match: pat
        let-fun:
        - patMap
        - inf:
          - let-fun:
            - go
            - match: pat
            inf:
            - go
            - pat
        let-fun:
        - hxTrue
        - inf:
          - .Lit: HExpr
          - inf:
            - litTrue
            - loc
        let-fun:
        - hxFalse
        - inf:
          - .Lit: HExpr
          - inf:
            - litFalse
            - loc
        let-fun:
        - hxApp
        - inf:
          - .Inf: HExpr
          - inf:
            - .App: InfOp
            - inf:
              - inf:
                - prim
                - f
              - inf:
                - inf:
                  - prim
                  - x
                - prim
            - ty
            - loc
        let-fun:
        - hxAnno
        - inf:
          - .Inf: HExpr
          - inf:
            - .Anno: InfOp
            - inf:
              - inf:
                - prim
                - expr
              - prim
            - ty
            - loc
        let-fun:
        - hxSemi
        - inf:
          - .Inf: HExpr
          - inf:
            - .Semi: InfOp
            - items
            - noTy
            - loc
        let-fun:
        - hxCallProc
        - inf:
          - .Inf: HExpr
          - inf:
            - .CallProc: InfOp
            - inf:
              - inf:
                - prim
                - callee
              - args
            - resultTy
            - loc
        let-fun:
        - hxCallClosure
        - inf:
          - .Inf: HExpr
          - inf:
            - .CallClosure: InfOp
            - inf:
              - inf:
                - prim
                - callee
              - args
            - resultTy
            - loc
        let-fun:
        - hxTuple
        - inf:
          - .Inf: HExpr
          - inf:
            - .Tuple: InfOp
            - items
            - inf:
              - tyTuple
              - inf:
                - inf:
                  - listMap
                  - exprToTy
                - items
            - loc
        let-fun:
        - hxUnit
        - inf:
          - inf:
            - hxTuple
            - prim
          - loc
        let-fun:
        - hxNil
        - inf:
          - .Prim: HExpr
          - inf:
            - .Nil: HPrim
            - inf:
              - tyList
              - itemTy
            - loc
        let-fun:
        - hxIsUnitLit
        - match: expr
        let-fun:
        - hxIsAlwaysTrue
        - match: expr
        let-fun:
        - exprExtract
        - inf:
          - match: expr
        let-fun:
        - exprMap
        - inf:
          - let-fun:
            - goPat
            - inf:
              - inf:
                - inf:
                  - patMap
                  - f
                - g
              - pat
            let-fun:
            - go
            - match: expr
            inf:
            - go
            - expr
        let-fun:
        - exprToTy
        - let-val:
          - inf:
            - exprExtract
            - expr
          ty
        inf:
        - inf
        - inf:
          - open:
            - MiloneLang
            - Types
          - open:
            - MiloneLang
            - Helpers
          - synonym
          - let-fun:
            - locShift
            - inf:
              - inf:
                - assert
                - match:
                  - match:
                    - inf:
                      - inf:
                        - prim
                        - inf:
                          - inf:
                            - prim
                            - l
                          - 0
                      - false
              - let-fun:
                - go
                - match:
                  - inf:
                    - inf:
                      - prim
                      - i
                    - r
                inf:
                - inf:
                  - inf:
                    - go
                    - y
                  - x
                - l
            let-val:
            - inf:
              - inf:
                - char
                - 0
            let-fun:
            - charIsIdent
            - inf:
              - match:
                - match:
                  - inf:
                    - inf:
                      - prim
                      - c
                    - \'_\'
            let-fun:
            - charIsOp
            - inf:
              - match:
                - match:
                  - match:
                    - match:
                      - match:
                        - match:
                          - match:
                            - match:
                              - match:
                                - match:
                                  - match:
                                    - match:
                                      - match:
                                        - match:
                                          - inf:
                                            - inf:
                                              - prim
                                              - c
                                            - \'+\'
            let-fun:
            - charIsPun
            - inf:
              - match:
                - match:
                  - match:
                    - match:
                      - inf:
                        - inf:
                          - prim
                          - c
                        - \',\'
            let-fun:
            - strIsFollowedBy
            - inf:
              - let-fun:
                - go
                - match:
                  - inf:
                    - inf:
                      - prim
                      - pi
                    - .Length: prefix
                match:
                - inf:
                  - inf:
                    - prim
                    - inf:
                      - inf:
                        - prim
                        - .Length: s
                      - inf:
                        - inf:
                          - prim
                          - i
                        - .Length: prefix
                  - false
            let-fun:
            - strIsFollowedByRawQuotes
            - inf:
              - inf:
                - inf:
                  - inf:
                    - strIsFollowedBy
                    - i
                  - \"\\\"\\\"\\\"\"
                - s
            let-fun:
            - scanError
            - inf:
              - inf:
                - prim
                - i
              - 1
            let-fun:
            - lookEof
            - inf:
              - inf:
                - prim
                - inf:
                  - inf:
                    - prim
                    - i
                  - .Length: text
              - false
            let-fun:
            - lookSpace
            - inf:
              - charIsSpace
              - inf:
                - inf:
                  - prim
                  - text
                - i
            let-fun:
            - scanSpace
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookSpace
                    - text
                  - i
              - let-fun:
                - go
                - match:
                  - match:
                    - inf:
                      - inf:
                        - prim
                        - i
                      - .Length: text
                inf:
                - go
                - i
            let-fun:
            - lookComment
            - match:
              - inf:
                - inf:
                  - inf:
                    - strIsFollowedBy
                    - i
                  - \"//\"
                - text
            let-fun:
            - scanLine
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookComment
                    - text
                  - i
              - let-fun:
                - go
                - match:
                  - inf:
                    - inf:
                      - prim
                      - i
                    - .Length: text
                inf:
                - go
                - i
            let-fun:
            - lookPun
            - inf:
              - charIsPun
              - inf:
                - inf:
                  - prim
                  - text
                - i
            let-fun:
            - scanPun
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookPun
                    - text
                  - i
              - inf:
                - inf:
                  - prim
                  - i
                - 1
            let-fun:
            - lookOp
            - inf:
              - charIsOp
              - inf:
                - inf:
                  - prim
                  - text
                - i
            let-fun:
            - scanOp
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookOp
                    - text
                  - i
              - let-fun:
                - go
                - match:
                  - match:
                    - inf:
                      - inf:
                        - prim
                        - i
                      - .Length: text
                inf:
                - go
                - i
            let-fun:
            - lookIdent
            - match:
              - inf:
                - charIsIdent
                - inf:
                  - inf:
                    - prim
                    - text
                  - i
            let-fun:
            - scanIdent
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookIdent
                    - text
                  - i
              - let-fun:
                - go
                - match:
                  - match:
                    - inf:
                      - inf:
                        - prim
                        - i
                      - .Length: text
                inf:
                - go
                - i
            let-fun:
            - lookIntLit
            - inf:
              - charIsDigit
              - inf:
                - inf:
                  - prim
                  - text
                - i
            let-fun:
            - scanIntLit
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookIntLit
                    - text
                  - i
              - let-fun:
                - go
                - match:
                  - match:
                    - inf:
                      - inf:
                        - prim
                        - i
                      - .Length: text
                inf:
                - go
                - i
            let-fun:
            - lookCharLit
            - inf:
              - inf:
                - prim
                - inf:
                  - inf:
                    - prim
                    - text
                  - i
              - \'\\\'\'
            let-fun:
            - scanCharLit
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookCharLit
                    - text
                  - i
              - let-fun:
                - go
                - match:
                  - match:
                    - inf:
                      - inf:
                        - prim
                        - inf:
                          - inf:
                            - prim
                            - i
                          - 1
                      - .Length: text
                inf:
                - go
                - inf:
                  - inf:
                    - prim
                    - i
                  - 1
            let-fun:
            - lookStrLit
            - inf:
              - inf:
                - prim
                - inf:
                  - inf:
                    - prim
                    - text
                  - i
              - \'\\\"\'
            let-fun:
            - scanStrLit
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookStrLit
                    - text
                  - i
              - let-fun:
                - go
                - match:
                  - match:
                    - inf:
                      - inf:
                        - prim
                        - inf:
                          - inf:
                            - prim
                            - i
                          - 1
                      - .Length: text
                inf:
                - go
                - inf:
                  - inf:
                    - prim
                    - i
                  - 1
            let-fun:
            - lookStrLitRaw
            - inf:
              - inf:
                - strIsFollowedByRawQuotes
                - i
              - text
            let-fun:
            - scanStrLitRaw
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookStrLitRaw
                    - text
                  - i
              - let-fun:
                - go
                - match:
                  - inf:
                    - inf:
                      - strIsFollowedByRawQuotes
                      - i
                    - text
                inf:
                - go
                - inf:
                  - inf:
                    - prim
                    - i
                  - 3
            let-fun:
            - tokenFromIdent
            - inf:
              - match:
                - inf:
                  - inf:
                    - inf:
                      - strSlice
                      - l
                    - r
                  - text
            let-fun:
            - tokenFromOp
            - inf:
              - match:
                - inf:
                  - inf:
                    - inf:
                      - strSlice
                      - l
                    - r
                  - text
            let-fun:
            - tokenFromPun
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - prim
                    - inf:
                      - inf:
                        - prim
                        - r
                      - l
                  - 1
              - match:
                - inf:
                  - inf:
                    - prim
                    - text
                  - l
            let-fun:
            - tokenFromIntLit
            - inf:
              - let-val:
                - inf:
                  - int
                  - inf:
                    - inf:
                      - inf:
                        - strSlice
                        - l
                      - r
                    - text
                inf:
                - .Int: Token
                - value
            let-fun:
            - tokenFromCharLit
            - inf:
              - inf:
                - inf:
                  - assert
                  - match:
                    - match:
                      - inf:
                        - inf:
                          - prim
                          - inf:
                            - inf:
                              - prim
                              - r
                            - inf:
                              - inf:
                                - prim
                                - l
                              - 2
                        - false
                - let-val:
                  - inf:
                    - inf:
                      - prim
                      - l
                    - 1
                  let-val:
                  - match:
                    - inf:
                      - inf:
                        - prim
                        - text
                      - i
                  inf:
                  - .Char: Token
                  - value
            let-fun:
            - tokenFromStrLit
            - inf:
              - inf:
                - inf:
                  - assert
                  - match:
                    - match:
                      - inf:
                        - inf:
                          - prim
                          - inf:
                            - inf:
                              - prim
                              - r
                            - inf:
                              - inf:
                                - prim
                                - l
                              - 2
                        - false
                - let-fun:
                  - go
                  - let-fun:
                    - next
                    - match:
                      - match:
                        - inf:
                          - inf:
                            - prim
                            - i
                          - inf:
                            - inf:
                              - prim
                              - r
                            - 1
                    let-val:
                    - inf:
                      - next
                      - i
                    let-val:
                    - inf:
                      - inf:
                        - prim
                        - inf:
                          - inf:
                            - inf:
                              - strSlice
                              - i
                            - endIndex
                          - text
                      - acc
                    let-val: endIndex
                    match:
                    - inf:
                      - inf:
                        - prim
                        - i
                      - inf:
                        - inf:
                          - prim
                          - r
                        - 1
                  let-val:
                  - inf:
                    - inf:
                      - go
                      - prim
                    - inf:
                      - inf:
                        - prim
                        - l
                      - 1
                  inf:
                  - .Str: Token
                  - value
            let-fun:
            - tokenFromStrLitRaw
            - inf:
              - inf:
                - assert
                - match:
                  - match:
                    - inf:
                      - inf:
                        - prim
                        - inf:
                          - inf:
                            - prim
                            - r
                          - inf:
                            - inf:
                              - prim
                              - l
                            - 6
                      - false
              - inf:
                - .Str: Token
                - inf:
                  - inf:
                    - inf:
                      - strSlice
                      - inf:
                        - inf:
                          - prim
                          - l
                        - 3
                    - inf:
                      - inf:
                        - prim
                        - r
                      - 3
                  - text
            let-fun:
            - tokCtxToTextIndex
            - inf:
              - text
              - i
            let-fun:
            - tokCtxSkip
            - inf:
              - inf:
                - inf:
                  - assert
                  - match:
                    - match:
                      - inf:
                        - inf:
                          - prim
                          - inf:
                            - inf:
                              - prim
                              - i
                            - 0
                        - false
                - let-val:
                  - inf:
                    - inf:
                      - inf:
                        - inf:
                          - locShift
                          - text
                        - i
                      - r
                    - loc
                  inf:
                  - text
                  - r
                  - newLoc
                  - acc
            let-fun:
            - tokCtxPush
            - inf:
              - inf:
                - inf:
                  - assert
                  - match:
                    - match:
                      - inf:
                        - inf:
                          - prim
                          - inf:
                            - inf:
                              - prim
                              - i
                            - 0
                        - false
                - let-val:
                  - inf:
                    - inf:
                      - prim
                      - inf:
                        - kind
                        - loc
                    - acc
                  let-val:
                  - inf:
                    - inf:
                      - inf:
                        - inf:
                          - locShift
                          - text
                        - i
                      - r
                    - loc
                  inf:
                  - text
                  - r
                  - newLoc
                  - newAcc
            let-fun:
            - tokEof
            - inf:
              - inf:
                - assert
                - inf:
                  - inf:
                    - lookEof
                    - text
                  - i
              - inf:
                - listRev
                - acc
            let-fun:
            - tokError
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanError
                  - text
                - i
              inf:
              - inf:
                - tokCtxSkip
                - r
              - t
            let-fun:
            - tokComment
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanLine
                  - text
                - i
              inf:
              - inf:
                - tokCtxSkip
                - r
              - t
            let-fun:
            - tokSpace
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanSpace
                  - text
                - i
              inf:
              - inf:
                - tokCtxSkip
                - r
              - t
            let-fun:
            - tokPun
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanPun
                  - text
                - i
              let-val:
              - inf:
                - inf:
                  - inf:
                    - tokenFromPun
                    - text
                  - i
                - r
              inf:
              - inf:
                - inf:
                  - tokCtxPush
                  - token
                - r
              - t
            let-fun:
            - tokOp
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanOp
                  - text
                - i
              let-val:
              - inf:
                - inf:
                  - inf:
                    - tokenFromOp
                    - text
                  - i
                - r
              inf:
              - inf:
                - inf:
                  - tokCtxPush
                  - token
                - r
              - t
            let-fun:
            - tokIdent
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanIdent
                  - text
                - i
              let-val:
              - inf:
                - inf:
                  - inf:
                    - tokenFromIdent
                    - text
                  - i
                - r
              inf:
              - inf:
                - inf:
                  - tokCtxPush
                  - token
                - r
              - t
            let-fun:
            - tokIntLit
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanIntLit
                  - text
                - i
              let-val:
              - inf:
                - inf:
                  - inf:
                    - tokenFromIntLit
                    - text
                  - i
                - r
              inf:
              - inf:
                - inf:
                  - tokCtxPush
                  - token
                - r
              - t
            let-fun:
            - tokCharLit
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanCharLit
                  - text
                - i
              let-val:
              - match: ok
              inf:
              - inf:
                - inf:
                  - tokCtxPush
                  - token
                - r
              - t
            let-fun:
            - tokStrLit
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanStrLit
                  - text
                - i
              let-val:
              - match: ok
              inf:
              - inf:
                - inf:
                  - tokCtxPush
                  - token
                - r
              - t
            let-fun:
            - tokStrLitRaw
            - let-val:
              - inf:
                - tokCtxToTextIndex
                - t
              let-val:
              - inf:
                - inf:
                  - scanStrLitRaw
                  - text
                - i
              let-val:
              - match: ok
              inf:
              - inf:
                - inf:
                  - tokCtxPush
                  - token
                - r
              - t
            let-fun:
            - tokenize
            - inf:
              - let-fun:
                - go
                - let-val:
                  - inf:
                    - tokCtxToTextIndex
                    - t
                  match:
                  - inf:
                    - inf:
                      - lookEof
                      - text
                    - i
                inf:
                - go
                - inf:
                  - text
                  - 0
                  - inf:
                    - 0
                    - 0
                  - prim
            inf:
            - inf
            - inf:
              - open:
                - MiloneLang
                - Types
              - open:
                - MiloneLang
                - Helpers
              - let-fun:
                - leadsExpr
                - match: tokens
                let-fun:
                - leadsArg
                - match: tokens
                let-fun:
                - leadsPat
                - match: tokens
                let-fun:
                - nextLoc
                - inf:
                  - match: tokens
                let-fun:
                - nextInside
                - inf:
                  - match: tokens
                let-fun:
                - parseErrorCore
                - let-val:
                  - inf:
                    - inf:
                      - prim
                      - inf:
                        - inf:
                          - prim
                          - inf:
                            - inf:
                              - prim
                              - inf:
                                - inf:
                                  - prim
                                  - \"PARSE ERROR: \"
                                - msg
                            - \" (\"
                        - inf:
                          - locToString
                          - loc
                    - \")\"
                  inf:
                  - inf:
                    - prim
                    - inf:
                      - msg
                      - loc
                  - errors
                let-fun:
                - parseTyError
                - let-val:
                  - inf:
                    - nextLoc
                    - tokens
                  let-val:
                  - inf:
                    - inf:
                      - inf:
                        - parseErrorCore
                        - msg
                      - loc
                    - errors
                  inf:
                  - inf:
                    - .Missing: ATy
                    - loc
                  - tokens
                  - errors
                let-fun:
                - parsePatError
                - let-val:
                  - inf:
                    - nextLoc
                    - tokens
                  let-val:
                  - inf:
                    - inf:
                      - inf:
                        - parseErrorCore
                        - msg
                      - loc
                    - errors
                  inf:
                  - inf:
                    - .Missing: APat
                    - loc
                  - tokens
                  - errors
                let-fun:
                - parseExprError
                - let-val:
                  - inf:
                    - nextLoc
                    - tokens
                  let-val:
                  - inf:
                    - inf:
                      - inf:
                        - parseErrorCore
                        - msg
                      - loc
                    - errors
                  inf:
                  - inf:
                    - .Missing: AExpr
                    - loc
                  - tokens
                  - errors
                let-fun:
                - parseNewError
                - let-val:
                  - inf:
                    - nextLoc
                    - tokens
                  inf:
                  - inf:
                    - inf:
                      - parseErrorCore
                      - msg
                    - loc
                  - errors
                let-fun:
                - parseTyArgs
                - match: tokens
                let-fun:
                - parseTyAtom
                - match: tokens
                let-fun:
                - parseTySuffix
                - let-fun:
                  - go
                  - let-val:
                    - inf:
                      - inf:
                        - nextInside
                        - baseLoc
                      - tokens
                    match: tokens
                  inf:
                  - go
                  - inf:
                    - inf:
                      - parseTyAtom
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                let-fun:
                - parseTyPrefix
                - match: tokens
                let-fun:
                - parseTyTuple
                - let-fun:
                  - go
                  - match: tokens
                  let-val:
                  - inf:
                    - inf:
                      - parseTyPrefix
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parseTyFun
                - let-val:
                  - inf:
                    - inf:
                      - parseTyTuple
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parseTy
                - inf:
                  - inf:
                    - parseTyFun
                    - baseLoc
                  - inf:
                    - tokens
                    - errors
                let-fun:
                - parseTyDeclUnion
                - let-fun:
                  - go
                  - match: tokens
                  let-val:
                  - inf:
                    - inf:
                      - go
                      - prim
                    - inf:
                      - tokens
                      - errors
                  inf:
                  - inf:
                    - .Union: ATyDecl
                    - variants
                  - tokens
                  - errors
                let-fun:
                - parseTyDeclBody
                - match: tokens
                let-fun:
                - parsePatParenBody
                - let-val:
                  - inf:
                    - inf:
                      - parsePat
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parsePatListBody
                - let-fun:
                  - go
                  - match: tokens
                  let-val:
                  - inf:
                    - inf:
                      - parsePat
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  let-val:
                  - inf:
                    - inf:
                      - go
                      - inf:
                        - inf:
                          - prim
                          - itemPat
                        - prim
                    - inf:
                      - tokens
                      - errors
                  inf:
                  - inf:
                    - .ListLit: APat
                    - inf:
                      - itemPats
                      - bracketLoc
                  - tokens
                  - errors
                let-fun:
                - parsePatAtom
                - match: tokens
                let-fun:
                - parsePatNav
                - let-val:
                  - inf:
                    - inf:
                      - parsePatAtom
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parsePatCallArgs
                - let-val:
                  - inf:
                    - inf:
                      - locAddX
                      - 1
                    - inf:
                      - inf:
                        - locMax
                        - baseLoc
                      - calleeLoc
                  let-fun:
                  - go
                  - match:
                    - match:
                      - inf:
                        - inf:
                          - nextInside
                          - argBaseLoc
                        - tokens
                  inf:
                  - inf:
                    - go
                    - prim
                  - inf:
                    - tokens
                    - errors
                let-fun:
                - parsePatCall
                - let-val:
                  - inf:
                    - nextLoc
                    - tokens
                  let-val:
                  - inf:
                    - inf:
                      - parsePatNav
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  let-val:
                  - inf:
                    - inf:
                      - inf:
                        - parsePatCallArgs
                        - baseLoc
                      - calleeLoc
                    - inf:
                      - tokens
                      - errors
                  match: args
                let-fun:
                - parsePatCons
                - let-val:
                  - inf:
                    - inf:
                      - parsePatCall
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parsePatAnno
                - let-val:
                  - inf:
                    - inf:
                      - parsePatCons
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parsePatTuple
                - let-fun:
                  - go
                  - match: tokens
                  let-val:
                  - inf:
                    - inf:
                      - parsePatAnno
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parsePatAs
                - let-val:
                  - inf:
                    - inf:
                      - parsePatTuple
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parsePatOr
                - let-val:
                  - inf:
                    - inf:
                      - parsePatAs
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parsePatLet
                - match: tokens
                let-fun:
                - parsePat
                - match:
                  - inf:
                    - not
                    - match:
                      - inf:
                        - inf:
                          - nextInside
                          - baseLoc
                        - tokens
                let-fun:
                - parseRange
                - let-val:
                  - inf:
                    - inf:
                      - parseExpr
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parseList
                - let-val:
                  - inf:
                    - inf:
                      - parseStmts
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  let-val:
                  - match: tokens
                  inf:
                  - inf:
                    - .ListLit: AExpr
                    - inf:
                      - items
                      - bracketLoc
                  - tokens
                  - errors
                let-fun:
                - parseThenClause
                - let-val:
                  - inf:
                    - inf:
                      - locAddX
                      - 1
                    - baseLoc
                  match: tokens
                let-fun:
                - parseElseClause
                - match: tokens
                let-fun:
                - parseIf
                - let-val:
                  - inf:
                    - inf:
                      - locAddX
                      - 1
                    - ifLoc
                  let-val:
                  - inf:
                    - inf:
                      - parseExpr
                      - innerBaseLoc
                    - inf:
                      - tokens
                      - errors
                  let-val:
                  - inf:
                    - inf:
                      - parseThenClause
                      - ifLoc
                    - inf:
                      - tokens
                      - errors
                  let-val:
                  - inf:
                    - inf:
                      - parseElseClause
                      - ifLoc
                    - inf:
                      - tokens
                      - errors
                  inf:
                  - inf:
                    - .If: AExpr
                    - inf:
                      - cond
                      - body
                      - alt
                      - ifLoc
                  - tokens
                  - errors
                let-fun:
                - parseMatchArm
                - let-val:
                  - inf:
                    - inf:
                      - locAddX
                      - 1
                    - matchLoc
                  let-val:
                  - inf:
                    - inf:
                      - parsePat
                      - innerBaseLoc
                    - inf:
                      - tokens
                      - errors
                  let-val:
                  - match: tokens
                  let-val:
                  - match: tokens
                  inf:
                  - inf:
                    - AArm
                    - inf:
                      - pat
                      - guard
                      - body
                      - armLoc
                  - tokens
                  - errors
                let-fun:
                - parseMatch
                - let-val:
                  - inf:
                    - inf:
                      - parseExpr
                      - matchLoc
                    - inf:
                      - tokens
                      - errors
                  let-val:
                  - match: tokens
                  let-fun:
                  - go
                  - let-val:
                    - inf:
                      - inf:
                        - inf:
                          - parseMatchArm
                          - matchLoc
                        - armLoc
                      - inf:
                        - tokens
                        - errors
                    match: tokens
                  let-val:
                  - inf:
                    - inf:
                      - inf:
                        - go
                        - prim
                      - armLoc
                    - inf:
                      - tokens
                      - errors
                  inf:
                  - inf:
                    - .Match: AExpr
                    - inf:
                      - target
                      - arms
                      - matchLoc
                  - tokens
                  - errors
                let-fun:
                - parseFun
                - let-val:
                  - inf:
                    - inf:
                      - inf:
                        - parsePatCallArgs
                        - baseLoc
                      - funLoc
                    - inf:
                      - tokens
                      - errors
                  let-val:
                  - match: tokens
                  inf:
                  - inf:
                    - .Fun: AExpr
                    - inf:
                      - pats
                      - body
                      - funLoc
                  - tokens
                  - errors
                let-fun:
                - parseParenBody
                - let-val:
                  - inf:
                    - inf:
                      - inf:
                        - parseSemi
                        - baseLoc
                      - parenLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parseAccessModifier
                - match: tokens
                let-fun:
                - parseLet
                - let-val:
                  - inf:
                    - inf:
                      - locAddX
                      - 1
                    - letLoc
                  let-val:
                  - inf:
                    - parseAccessModifier
                    - tokens
                  let-val:
                  - inf:
                    - inf:
                      - parsePatLet
                      - innerBaseLoc
                    - inf:
                      - tokens
                      - errors
                  let-val:
                  - match: tokens
                  let-val:
                  - match: tokens
                  inf:
                  - inf:
                    - .Let: AExpr
                    - inf:
                      - pat
                      - body
                      - next
                      - letLoc
                  - tokens
                  - errors
                let-fun:
                - parseTyDecl
                - let-val:
                  - inf:
                    - inf:
                      - locAddX
                      - 1
                    - typeLoc
                  let-val:
                  - inf:
                    - parseAccessModifier
                    - tokens
                  match: tokens
                let-fun:
                - parseOpen
                - let-fun:
                  - parsePath
                  - let-fun:
                    - go
                    - match: tokens
                    match: tokens
                  let-val:
                  - inf:
                    - parsePath
                    - inf:
                      - tokens
                      - errors
                  inf:
                  - inf:
                    - .Open: AExpr
                    - inf:
                      - path
                      - openLoc
                  - tokens
                  - errors
                let-fun:
                - parseAtom
                - match: tokens
                let-fun:
                - parseSuffix
                - let-val:
                  - inf:
                    - inf:
                      - parseAtom
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  let-fun:
                  - go
                  - match: tokens
                  inf:
                  - inf:
                    - go
                    - l
                  - inf:
                    - tokens
                    - errors
                let-fun:
                - parseApp
                - let-val:
                  - inf:
                    - nextLoc
                    - tokens
                  let-val:
                  - inf:
                    - inf:
                      - locAddX
                      - 1
                    - calleeLoc
                  let-val:
                  - inf:
                    - inf:
                      - parseSuffix
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  let-fun:
                  - go
                  - match:
                    - match:
                      - inf:
                        - inf:
                          - nextInside
                          - argBaseLoc
                        - tokens
                  inf:
                  - inf:
                    - go
                    - callee
                  - inf:
                    - tokens
                    - errors
                let-fun:
                - parsePrefix
                - match: tokens
                let-fun:
                - parseNextLevelOp
                - match:
                  - inf:
                    - opLevelToNext
                    - level
                let-fun:
                - parseOps
                - let-fun:
                  - nextL
                  - let-val:
                    - inf:
                      - inf:
                        - inf:
                          - parseNextLevelOp
                          - level
                        - baseLoc
                      - inf:
                        - tokens
                        - errors
                    let-val:
                    - inf:
                      - .Bin: AExpr
                      - inf:
                        - op
                        - expr
                        - second
                        - opLoc
                    inf:
                    - inf:
                      - inf:
                        - inf:
                          - parseOps
                          - level
                        - baseLoc
                      - expr
                    - inf:
                      - tokens
                      - errors
                  let-fun:
                  - nextR
                  - let-val:
                    - inf:
                      - inf:
                        - inf:
                          - parseOp
                          - level
                        - baseLoc
                      - inf:
                        - tokens
                        - errors
                    let-val:
                    - inf:
                      - .Bin: AExpr
                      - inf:
                        - op
                        - expr
                        - second
                        - opLoc
                    inf:
                    - inf:
                      - inf:
                        - inf:
                          - parseOps
                          - level
                        - baseLoc
                      - expr
                    - inf:
                      - tokens
                      - errors
                  match:
                  - inf:
                    - level
                    - tokens
                let-fun:
                - parseOp
                - let-val:
                  - inf:
                    - inf:
                      - inf:
                        - parseNextLevelOp
                        - level
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  inf:
                  - inf:
                    - inf:
                      - inf:
                        - parseOps
                        - level
                      - baseLoc
                    - first
                  - inf:
                    - tokens
                    - errors
                let-fun:
                - parseTupleItem
                - inf:
                  - inf:
                    - inf:
                      - parseOp
                      - .Or: OpLevel
                    - baseLoc
                  - inf:
                    - tokens
                    - errors
                let-fun:
                - parseTuple
                - let-fun:
                  - go
                  - match: tokens
                  let-val:
                  - inf:
                    - inf:
                      - parseTupleItem
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parseAnno
                - let-val:
                  - inf:
                    - inf:
                      - parseTuple
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: tokens
                let-fun:
                - parseExpr
                - inf:
                  - inf:
                    - parseAnno
                    - baseLoc
                  - inf:
                    - tokens
                    - errors
                let-fun:
                - parseStmt
                - match: tokens
                let-fun:
                - parseStmts
                - let-fun:
                  - go
                  - match: tokens
                  let-val:
                  - inf:
                    - nextLoc
                    - tokens
                  match:
                  - inf:
                    - inf:
                      - locInside
                      - baseLoc
                    - alignLoc
                let-fun:
                - parseSemi
                - let-val:
                  - inf:
                    - inf:
                      - parseStmts
                      - baseLoc
                    - inf:
                      - tokens
                      - errors
                  match: items
                let-fun:
                - parseTopLevel
                - let-val:
                  - inf:
                    - 0
                    - 0
                  match: tokens
                let-fun:
                - parse
                - inf:
                  - let-val:
                    - inf:
                      - parseTopLevel
                      - inf:
                        - tokens
                        - prim
                    let-val:
                    - match: tokens
                    inf:
                    - expr
                    - errors
                inf:
                - inf
                - inf:
                  - open:
                    - MiloneLang
                    - Types
                  - open:
                    - MiloneLang
                    - Helpers
                  - let-fun:
                    - opToPrim
                    - match: op
                    let-fun:
                    - desugarListLitPat
                    - inf:
                      - inf:
                        - assert
                        - inf:
                          - not
                          - inf:
                            - listIsEmpty
                            - pats
                      - let-fun:
                        - go
                        - match: pats
                        inf:
                        - go
                        - pats
                    let-fun:
                    - desugarListLitExpr
                    - inf:
                      - inf:
                        - assert
                        - inf:
                          - not
                          - inf:
                            - listIsEmpty
                            - items
                      - let-fun:
                        - go
                        - match: items
                        inf:
                        - go
                        - items
                    let-fun:
                    - desugarIf
                    - let-val:
                      - match: alt
                      let-val:
                      - inf:
                        - inf:
                          - prim
                          - inf:
                            - AArm
                            - inf:
                              - inf:
                                - apTrue
                                - loc
                              - inf:
                                - axTrue
                                - loc
                              - body
                              - loc
                        - inf:
                          - inf:
                            - prim
                            - inf:
                              - AArm
                              - inf:
                                - inf:
                                  - apFalse
                                  - loc
                                - inf:
                                  - axTrue
                                  - loc
                                - alt
                                - loc
                          - prim
                      inf:
                      - .Match: AExpr
                      - inf:
                        - cond
                        - arms
                        - loc
                    let-fun:
                    - desugarFun
                    - let-val: \"fun\"
                      let-val:
                      - inf:
                        - .Fun: APat
                        - inf:
                          - ident
                          - pats
                          - loc
                      let-val:
                      - inf:
                        - .Ident: AExpr
                        - inf:
                          - ident
                          - loc
                      inf:
                      - .Let: AExpr
                      - inf:
                        - pat
                        - body
                        - next
                        - loc
                    let-fun:
                    - desugarUniNeg
                    - let-val:
                      - inf:
                        - .Lit: AExpr
                        - inf:
                          - inf:
                            - .Int: Lit
                            - 0
                          - loc
                      inf:
                      - .Bin: AExpr
                      - inf:
                        - .Sub: Op
                        - zero
                        - arg
                        - loc
                    let-fun:
                    - desugarBinNe
                    - let-val:
                      - inf:
                        - .Bin: AExpr
                        - inf:
                          - .Eq: Op
                          - l
                          - r
                          - loc
                      inf:
                      - inf:
                        - axNot
                        - eqExpr
                      - loc
                    let-fun:
                    - desugarBinLe
                    - let-val:
                      - inf:
                        - .Bin: AExpr
                        - inf:
                          - .Lt: Op
                          - r
                          - l
                          - loc
                      inf:
                      - inf:
                        - axNot
                        - ltExpr
                      - loc
                    let-fun:
                    - desugarBinGt
                    - inf:
                      - .Bin: AExpr
                      - inf:
                        - .Lt: Op
                        - r
                        - l
                        - loc
                    let-fun:
                    - desugarBinGe
                    - let-val:
                      - inf:
                        - .Bin: AExpr
                        - inf:
                          - .Lt: Op
                          - l
                          - r
                          - loc
                      inf:
                      - inf:
                        - axNot
                        - ltExpr
                      - loc
                    let-fun:
                    - desugarBinAnd
                    - inf:
                      - inf:
                        - inf:
                          - inf:
                            - desugarIf
                            - l
                          - r
                        - inf:
                          - axFalse
                          - loc
                      - loc
                    let-fun:
                    - desugarBinOr
                    - inf:
                      - inf:
                        - inf:
                          - inf:
                            - desugarIf
                            - l
                          - inf:
                            - axTrue
                            - loc
                        - r
                      - loc
                    let-fun:
                    - desugarBinPipe
                    - inf:
                      - .Bin: AExpr
                      - inf:
                        - .App: Op
                        - r
                        - l
                        - loc
                    let-fun:
                    - tryDesugarIndexRange
                    - match: expr
                    let-fun:
                    - desugarLet
                    - match: pat
                    let-fun:
                    - onTy
                    - inf:
                      - match: ty
                    let-fun:
                    - onPat
                    - inf:
                      - match: pat
                    let-fun:
                    - onExpr
                    - inf:
                      - match: expr
                    let-fun:
                    - astToHir
                    - inf:
                      - inf:
                        - onExpr
                        - inf:
                          - expr
                          - nameCtx
                    inf:
                    - inf
                    - inf:
                      - open:
                        - MiloneLang
                        - AstToHir
                      - open:
                        - MiloneLang
                        - Helpers
                      - open:
                        - MiloneLang
                        - Lexing
                      - open:
                        - MiloneLang
                        - Parsing
                      - open:
                        - MiloneLang
                        - Types
                      - let-fun:
                        - findOpenPaths
                        - let-fun:
                          - go
                          - match: expr
                          inf:
                          - go
                          - expr
                        let-fun:
                        - findOpenModules
                        - let-fun:
                          - extractor
                          - match: path
                          inf:
                          - inf:
                            - listChoose
                            - extractor
                          - inf:
                            - findOpenPaths
                            - expr
                        let-fun:
                        - spliceExpr
                        - let-fun:
                          - go
                          - match: expr
                          inf:
                          - go
                          - firstExpr
                        let-fun:
                        - parseProjectModules
                        - let-fun:
                          - go
                          - match:
                            - inf:
                              - inf:
                                - mapContainsKey
                                - moduleName
                              - moduleMap
                          let-val:
                          - inf:
                            - inf:
                              - go
                              - inf:
                                - prim
                                - inf:
                                  - mapEmpty
                                  - strCmp
                                - nameCtx
                                - prim
                            - projectName
                          let-val:
                          - inf:
                            - listRev
                            - moduleAcc
                          inf:
                          - inf:
                            - inf:
                              - listReduce
                              - spliceExpr
                            - modules
                          - nameCtx
                          - errorAcc
                        inf:
                        - inf
                        - inf:
                          - open:
                            - MiloneLang
                            - Types
                          - open:
                            - MiloneLang
                            - Helpers
                          - open:
                            - MiloneLang
                            - Lexing
                          - open:
                            - MiloneLang
                            - Parsing
                          - open:
                            - MiloneLang
                            - AstToHir
                          - open:
                            - MiloneLang
                            - Bundling
                          - let-fun:
                            - litToString
                            - match: lit
                            let-fun:
                            - tokenToString
                            - match: token
                            let-fun:
                            - atDump
                            - match: ty
                            let-fun:
                            - apDump
                            - match: pat
                            let-fun:
                            - axDump
                            - match: expr
                            let-fun:
                            - hxDump
                            - let-fun:
                              - findIdent
                              - inf:
                                - inf:
                                  - nameCtxFind
                                  - serial
                                - nameCtx
                              match: expr
                            let-fun:
                            - doSelf
                            - let-fun:
                              - readModuleFile
                              - inf:
                                - fileReadAllText
                                - inf:
                                  - inf:
                                    - prim
                                    - inf:
                                      - inf:
                                        - prim
                                        - \"tests/examples/MiloneLang/\"
                                      - moduleName
                                  - \".fs\"
                              let-val: \"MiloneLang\"
                              let-val:
                              - inf:
                                - nameCtxEmpty
                                - inf
                              let-val:
                              - inf:
                                - inf:
                                  - inf:
                                    - parseProjectModules
                                    - readModuleFile
                                  - projectName
                                - nameCtx
                              inf:
                              - inf:
                                - printfn
                                - \"HIR:\"
                              - inf:
                                - inf:
                                  - printfn
                                  - \"%s\"
                                - inf:
                                  - dumpTreeToString
                                  - inf:
                                    - inf:
                                      - hxDump
                                      - nameCtx
                                    - expr
                              - inf:
                                - inf:
                                  - listIter
                                  - let-fun:
                                    - fun
                                    - inf:
                                      - inf:
                                        - listIter
                                        - let-fun:
                                          - fun
                                          - inf:
                                            - inf:
                                              - inf:
                                                - printfn
                                                - \"ERROR %s (%s)\"
                                              - msg
                                            - inf:
                                              - locToString
                                              - loc
                                          fun
                                      - errors
                                    fun
                                - errorListList
                              - 0
                            inf:
                            - inf
                            - inf:
                              - open:
                                - MiloneLang
                                - Polyfills
                              - open:
                                - MiloneLang
                                - Lexing
                              - open:
                                - MiloneLang
                                - Types
                              - open:
                                - MiloneLang
                                - Self
                              - let-fun:
                                - fileReadAllText
                                - inf:
                                  - inf:
                                    - inf:
                                      - inf:
                                        - __nativeFun
                                        - \"file_read_all_text\"
                                      - 1
                                    - fileName
                                let-fun:
                                - main
                                - inf:
                                  - doSelf
                                  - fileReadAllText
                                inf
$? = 0
