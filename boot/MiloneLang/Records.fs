/// ## Records
///
/// Generated by scripts/RecordGen from `Records.yml`.
/// Run `./records` to regenerate.
///
/// Defines some types as synonym of tuple with getter/setter functions
/// because record types are unimplemented in milone-lang.
module rec MiloneLang.Records

open MiloneLang.Types

type ScopeCtx =
  (
    Serial
    * Map<Serial, Ident>
    * Map<VarSerial, VarDef>
    * Map<VarSerial, LetDepth>
    * Map<TySerial, TyDef>
    * Map<TySerial, LetDepth>
    * ScopeSerial
    * Scope
    * LetDepth
  )

let scopeCtxGetSerial ((serial, _, _, _, _, _, _, _, _): ScopeCtx) =
  serial

let scopeCtxGetNameMap ((_, nameMap, _, _, _, _, _, _, _): ScopeCtx) =
  nameMap

let scopeCtxGetVars ((_, _, vars, _, _, _, _, _, _): ScopeCtx) =
  vars

let scopeCtxGetVarDepths ((_, _, _, varDepths, _, _, _, _, _): ScopeCtx) =
  varDepths

let scopeCtxGetTys ((_, _, _, _, tys, _, _, _, _): ScopeCtx) =
  tys

let scopeCtxGetTyDepths ((_, _, _, _, _, tyDepths, _, _, _): ScopeCtx) =
  tyDepths

let scopeCtxGetLocalSerial ((_, _, _, _, _, _, localSerial, _, _): ScopeCtx) =
  localSerial

let scopeCtxGetLocal ((_, _, _, _, _, _, _, local, _): ScopeCtx) =
  local

let scopeCtxGetLetDepth ((_, _, _, _, _, _, _, _, letDepth): ScopeCtx) =
  letDepth

let scopeCtxWithSerial serial ((_, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth): ScopeCtx): ScopeCtx =
  serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth

let scopeCtxWithNameMap nameMap ((serial, _, vars, varDepths, tys, tyDepths, localSerial, local, letDepth): ScopeCtx): ScopeCtx =
  serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth

let scopeCtxWithVars vars ((serial, nameMap, _, varDepths, tys, tyDepths, localSerial, local, letDepth): ScopeCtx): ScopeCtx =
  serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth

let scopeCtxWithVarDepths varDepths ((serial, nameMap, vars, _, tys, tyDepths, localSerial, local, letDepth): ScopeCtx): ScopeCtx =
  serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth

let scopeCtxWithTys tys ((serial, nameMap, vars, varDepths, _, tyDepths, localSerial, local, letDepth): ScopeCtx): ScopeCtx =
  serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth

let scopeCtxWithTyDepths tyDepths ((serial, nameMap, vars, varDepths, tys, _, localSerial, local, letDepth): ScopeCtx): ScopeCtx =
  serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth

let scopeCtxWithLocalSerial localSerial ((serial, nameMap, vars, varDepths, tys, tyDepths, _, local, letDepth): ScopeCtx): ScopeCtx =
  serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth

let scopeCtxWithLocal local ((serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, _, letDepth): ScopeCtx): ScopeCtx =
  serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth

let scopeCtxWithLetDepth letDepth ((serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, _): ScopeCtx): ScopeCtx =
  serial, nameMap, vars, varDepths, tys, tyDepths, localSerial, local, letDepth
